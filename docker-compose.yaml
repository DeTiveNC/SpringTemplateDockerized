services:
  kotlin_app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kotlin_app
    environment:
      DB_URL: <KEY>
      DB_USERNAME: <KEY>
      DB_PASSWORD: <KEY>
      ISSUER_URL: <KEY>
      CHATGPT-KEY: <KEY>
    ports:
      - "8080:8080"
    depends_on:
      kotlin_db:
        condition: service_healthy
    networks:
      - kotlin-network

  kotlin_db:
    container_name: kotlin_db
    image: postgres:17-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: <KEY>
      POSTGRES_PASSWORD: <KEY>
      POSTGRES_DB: <KEY>
    volumes:
      - data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
    networks:
      - kotlin-network

  pgadmin_db:
    image: dpage/pgadmin4:latest
    container_name: pgadmin4_container
    ports:
      - "8888:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: <KEY>
      PGADMIN_DEFAULT_PASSWORD: <KEY>
    depends_on:
      kotlin_db:
        condition: service_healthy
    networks:
      - kotlin-network

  kc-oauth2.0:
    image: quay.io/keycloak/keycloak:latest
    container_name: keycloak-admin
    ports:
      - "8181:8080"
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: <KEY>
      KC_BOOTSTRAP_ADMIN_PASSWORD: <KEY>
    command: start-dev
    depends_on:
      kotlin_db:
        condition: service_healthy
    networks:
      - kotlin-network

volumes:
  data:

networks:
  kotlin-network:
    driver: bridge